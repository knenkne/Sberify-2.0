on: [push]
jobs:
    setup:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - uses: actions/setup-node@v2
              with:
                  node-version: '14'

            - run: npm ci

    test:
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - name: Lint
              run: npm run lint

            - name: Unit
              run: npm run test

    build:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - run: npm run build

    deploy:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Start deployment
              uses: bobheadxi/deployments@v1
              id: deployment
              with:
                  step: start
                  token: ${{ secrets.GITHUB_TOKEN }}
                  env: ${{ fromJSON('["Production", "Preview"]')[github.ref != 'refs/heads/main'] }}

            - uses: actions/checkout@v2

            - uses: amondnet/vercel-action@v20
              id: deploy-vercel-staging
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-args: ${{ fromJSON('["--prod", ""]')[github.ref != 'refs/heads/main'] }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  scope: ${{ secrets.VERCEL_ORG_ID }}

            - name: End-to-end testing
              uses: cypress-io/github-action@v2
              with:
                  record: true
                  config: baseUrl=${{ steps.deploy-vercel-staging.outputs.preview-url }}
              env:
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: End deployment
              uses: bobheadxi/deployments@v1
              if: always()
              with:
                  step: finish
                  token: ${{ secrets.GITHUB_TOKEN }}
                  status: ${{ job.status }}
                  deployment_id: ${{ steps.deployment.outputs.deployment_id }}
